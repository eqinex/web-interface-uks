imports:
    - { resource: parameters.yml }
    - { resource: security.yml }
    - { resource: services.yml }
    - { resource: menu.yml }
    - { resource: "@AppBundle/Resources/config/services.yml" }

# Put parameters here that don't need to change on each machine where the app is deployed
# http://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:
    locale: ru

framework:
    #esi: ~
    translator: { fallbacks: ['%locale%'] }
    secret: '%secret%'
    router:
        resource: '%kernel.project_dir%/app/config/routing.yml'
        strict_requirements: ~
    form: ~
    csrf_protection: ~
    validation: { enable_annotations: true }
    #serializer: { enable_annotations: true }
    templating:
        engines: ['twig']
    default_locale: '%locale%'
    trusted_hosts: ~
    session:
        # http://symfony.com/doc/current/reference/configuration/framework.html#handler-id
        handler_id: session.handler.native_file
        save_path: '%kernel.project_dir%/var/sessions/%kernel.environment%'
    fragments: ~
    http_method_override: true
    assets: ~
    php_errors:
        log: true

# Twig Configuration
twig:
    debug: '%kernel.debug%'
    strict_variables: '%kernel.debug%'

# Doctrine Configuration
doctrine:
    dbal:
        driver: '%database_driver%'
        host: '%database_host%'
        port: '%database_port%'
        dbname: '%database_name%'
        user: '%database_user%'
        password: '%database_password%'
        charset: UTF8
        types:
          json: Sonata\Doctrine\Types\JsonType

    orm:
        auto_generate_proxy_classes: "%kernel.debug%"
        entity_managers:
            default:
                naming_strategy: doctrine.orm.naming_strategy.underscore
                auto_mapping: true
                mappings:
                    ApplicationSonataUserBundle: ~
                    SonataUserBundle: ~
                    FOSUserBundle: ~

# Swiftmailer Configuration
swiftmailer:
    transport: '%mailer_transport%'
    host: '%mailer_host%'
    username: '%mailer_user%'
    password: '%mailer_password%'
    spool: { type: memory }

nelmio_cors:
    defaults:
        allow_credentials: false
        allow_origin: ['*']
        allow_headers: ['*']
        allow_methods: ['POST']
        max_age: 3600
        hosts: []
        origin_regex: false

# FOSRest Configuration
fos_rest:
    body_listener: true
    format_listener:
        rules:
            - { path: '^/scenes', priorities: ['json'], fallback_format: json, prefer_extension: false }
            - { path: '^/dlc', priorities: ['json'], fallback_format: json, prefer_extension: false }
            - { path: '^/env-dlc', priorities: ['json'], fallback_format: json, prefer_extension: false }
            - { path: '^/content', priorities: ['json'], fallback_format: json, prefer_extension: false }
            - { path: '^/cameras', priorities: ['json'], fallback_format: json, prefer_extension: false }
            - { path: '^/operators', priorities: ['json'], fallback_format: json, prefer_extension: false }
            - { path: '^/dlc-types"', priorities: ['json'], fallback_format: json, prefer_extension: false }
            - { path: '^/configuration', priorities: ['json'], fallback_format: json, prefer_extension: false }
            - { path: '^/scene-dlc', priorities: ['json'], fallback_format: json, prefer_extension: false }
            - { path: '^/experiments', priorities: ['json'], fallback_format: json, prefer_extension: false }
            - { path: '^/environment-ode', priorities: ['json'], fallback_format: json, prefer_extension: false }
            - { path: '^/joints', priorities: ['json'], fallback_format: json, prefer_extension: false }

            - { path: '^/', priorities: ['html'], fallback_format: html, prefer_extension: false }
    param_fetcher_listener: true
    view:
        view_response_listener: 'force'
        formats:
            json: true

sonata_block:
    default_contexts: [cms]
    blocks:
        # enable the SonataAdminBundle block
        sonata.admin.block.admin_list:
            contexts: [admin]
sonata_user:
    security_acl: true
    manager_type: orm # can be orm or mongodb
    impersonating:
        route: homepage

sonata_admin:
    security:
         handler: sonata.admin.security.handler.acl

sonata_block:
    blocks:
        #...
        sonata.user.block.menu:    # used to display the menu in profile pages
        sonata.user.block.account: # used to display menu option (login option)
        sonata.block.service.text: # used to if you plan to use Sonata user routes

fos_user:
    db_driver:      orm # can be orm or odm
    firewall_name:  main
    user_class:     Application\Sonata\UserBundle\Entity\User

    group:
        group_class:   Application\Sonata\UserBundle\Entity\Group
        group_manager: sonata.user.orm.group_manager                    # If you're using doctrine orm (use sonata.user.mongodb.group_manager for mongodb)

    service:
        user_manager: sonata.user.orm.user_manager                      # If you're using doctrine orm (use sonata.user.mongodb.user_manager for mongodb)

    from_email:
        address: konkurs.support@npo-at.com
        sender_name: Konkurs Support
