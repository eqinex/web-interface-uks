<?php

namespace AppBundle\Repository;

use AppBundle\Traits\RepositoryPaginatorTrait;

/**
 * DlcRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class DlcRepository extends \Doctrine\ORM\EntityRepository
{
    use RepositoryPaginatorTrait;

    /**
     * @param $filters
     * @param int $currentPage
     * @param int $perPage
     * @return \Doctrine\ORM\Tools\Pagination\Paginator
     */
    public function getAvailableModels($filters, $currentPage = 1, $perPage = 20)
    {
        $qb = $this->createQueryBuilder('m');

        $qb->select('m');

        if (!empty($filters['type'])) {
            $qb
                ->where(
                    $qb->expr()->in('m.type', ':type')
                )
                ->setParameter('type', $filters['type'])
            ;
        }

        if (!empty($filters['name'])) {
            $qb
                ->andWhere(
                    $qb->expr()->like('m.name', ':name')
                )
                ->setParameter('name', $filters['name'])
            ;
        }

        if (!empty($filters['bundle'])) {
            $qb
                ->andWhere(
                    $qb->expr()->like('m.bundle', ':bundle')
                )
                ->setParameter('bundle', $filters['bundle'])
            ;
        }

        if (empty($filters['active'])) {
            $qb
                ->andWhere('m.active = :active')
                ->setParameter('active', 1)
            ;
        }

        $paginator = $this->paginate($qb, $currentPage, $perPage);
        return $paginator;
    }

    /**
     * @param $filters
     * @param int $currentPage
     * @param int $perPage
     * @return \Doctrine\ORM\Tools\Pagination\Paginator
     */
    public function getAvailableEnvironments($filters, $currentPage = 1, $perPage = 20)
    {
        $qb = $this->createQueryBuilder('env');

        $qb->select('env');

        if (!empty($filters['type'])) {
            $qb
                ->where('env.type =:type')
                ->andWhere('env.active =:active')
                ->setParameter('type', $filters['type'])
                ->setParameter('active', 1)
            ;
        }

        $paginator = $this->paginate($qb, $currentPage, $perPage);
        return $paginator;
    }
}
